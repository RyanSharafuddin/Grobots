#side exp2
#author Devon
#date 6 Feb 2002

(20030314) Shrank.

#color 070
#type builder
#color ecc
#hardware
processor 2
solar-cells 1.5
constructor 3.6
energy 250 25
#code
do
	constructor-type nif
		0 2 random-int if
			2 constructor-type! ;2/3rd chance 
		else
			1 constructor-type! ;1/3rd chance 
		then
	then
	energy 10 > constructor-max-rate 0 ifev constructor-rate!
forever

#type Animal 
#color F0E 
#hardware 
 solar-cells .3
 engine .04 
 constructor 2 
 eater 2 
 energy 200 20
 food-sensor 8 
 robot-sensor 24
 grenades 40 24 50
 processor 5
 armor 150 
#code
#vector dest

new-dest:
  0 world-width random 0 world-height random dest!
return

#start
new-dest
do
 grenades-reload-time periodic-robot-sensor if
   robot-found if
   robot-position robot-velocity lead-grenade
   then
 then 
	constructor-type nif
		0 2 random-int if
			3 constructor-type! ;2/3rd chance 
		else
			4 constructor-type! ;1/3rd chance 
		then
	then
	energy 10 > constructor-max-rate 0 ifev constructor-rate!
  44 periodic-food-sensor drop
  food-found if
    food-position seek-location
  else
    dest seek-location
    position dest 3 in-range new-dest& ifc
  then
forever
#type Killer Vegetable
#color F0E
#hardware
  solar-cells .5
  constructor .3
  armor 100
  processor 5
  energy 100 0
  grenades 40 23 50
  robot-sensor 23
#code
do
	energy 10 >= if
		4 constructor-type!
		constructor-max-rate constructor-rate!
	else
		0 constructor-rate!
	then
  
  grenades-reload-time periodic-robot-sensor if
    robot-found if
      robot-position robot-velocity lead-grenade
    then
  then
forever






#type fighter
#color f0d

Communicates, to help find targets.

#hardware
  processor 20
  engine .07
  
  solar-cells .15   ;c 270
  energy 100 30
  
  armor 150
  repair-rate .1   ;c 75
  
  robot-sensor 15 1
  blaster 15 1 15
  radio send receive

#code

do
  energy 10 > if
    scan^
  else
    0 engine-power!
  then
  sync
forever

#var next-scan 0
#const scan-interval 53
#const fighting-range 2

scan:
  time next-scan < ifr
  fire-robot-sensor sync
  robot-found if
    energy 20 > if
      robot-position robot-velocity robot-distance blaster-speed / vs* v+
        position v-
      robot-distance fighting-range > if
        engine-max-power engine-power!
        2dup unitize 5 vs/ engine-velocity!
      else
        0 engine-power!
      then
      robot-distance robot-radius - radius 2.5 * <= if
        angle fire-blaster
      else
        2drop
      then
    then
    robot-position time 3 1 send
    time blaster-reload-time + next-scan!
  else
    ;use radio
    0 engine-power!
    do 1 messages while
      energy 40 > if
        1 receive drop
        60 + time >= if
          position v-
          2dup norm fighting-range > if
            engine-max-power engine-power!
            2dup engine-velocity!
          then
        then
        2drop
      then
    loop
    time scan-interval + next-scan!
  then
return

#end
